1. Project Overview

Project Name: Zookeeper's ChallengeDescription: This Java program processes and organizes data from arrivingAnimals.txt and animalNames.txt. It stores animals in appropriate data structures and generates a formatted report of all animals, categorized by species.

2. Components and Classes

Main Classes:

App – Handles file reading, data processing, and report generation.

Animal – Base class representing an animal with attributes like name, species, and age.

Mammal, Bird, Reptile – Subclasses for different animal types.

ZooManager – Handles organization and reporting of animals.

3. Data Structures

Data Structure

Purpose

ArrayList<Animal>

Stores all animals dynamically

HashMap<String, List<Animal>>

Maps species names to lists of animals

HashMap<String, Integer>

Tracks species count

4. Data Flow & Interaction

Read data from arrivingAnimals.txt and animalNames.txt.

Create Animal objects for each entry.

Store and organize animals into ArrayList and HashMap.

Generate a report and write to newAnimals.txt.

5. File Input/Output

Input Files:

arrivingAnimals.txt – Contains names and ages of arriving animals.

animalNames.txt – Maps names to species.

Output File:

newAnimals.txt – Formatted report of all animals, organized by species.

6. Example input/output
In arriving animals.txt:
Simba, 3
Shenzi, 5
Shere Khan, 4
Baloo, 6

In NewAnimals.txt:
Animal Report
=============

Name: Simba, Species: Lion, Age: 3
Name: Shenzi, Species: Hyena, Age: 5
Name: Shere Khan, Species: Tiger, Age: 4
Name: Baloo, Species: Bear, Age: 6

Species: Lion
Total Count: 1
Animals:
 - Simba, Age: 3


Species: Hyena
Total Count: 1
Animals:
 - Shenzi, Age: 5


Species: Bear
Total Count: 1
Animals:
 - Baloo, Age: 6


Species: Tiger
Total Count: 1
Animals:
 - Shere Khan, Age: 4

End of Report
